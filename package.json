{
  "name": "riggerconnect-infrastructure",
  "version": "1.0.0",
  "description": "Infrastructure and DevOps tools for RiggerConnect platform",
  "main": "index.js",
  "scripts": {
    "deploy": "npm run deploy:staging",
    "deploy:staging": "echo 'Deploying to staging environment'",
    "deploy:production": "echo 'Deploying to production environment'",
    "build:all": "npm run build:backend && npm run build:frontend",
    "build:backend": "cd ../AutomationServer && npm run build",
    "build:frontend": "cd ../RiggerConnectMobileApp && npm run build",
    "test:integration": "jest --config=jest.integration.config.js",
    "test:e2e": "jest --config=jest.e2e.config.js",
    "lint:all": "npm run lint:backend && npm run lint:frontend",
    "lint:backend": "cd ../AutomationServer && npm run lint",
    "lint:frontend": "cd ../RiggerConnectMobileApp && npm run lint",
    "security:audit": "npm run security:audit:backend && npm run security:audit:frontend",
    "security:audit:backend": "cd ../AutomationServer && npm audit",
    "security:audit:frontend": "cd ../RiggerConnectMobileApp && npm audit",
    "docker:build": "docker-compose build",
    "docker:up": "docker-compose up -d",
    "docker:down": "docker-compose down",
    "k8s:deploy": "kubectl apply -f k8s/",
    "k8s:delete": "kubectl delete -f k8s/",
    "monitoring:setup": "echo 'Setting up monitoring infrastructure'",
    "backup:database": "echo 'Running database backup'",
    "restore:database": "echo 'Restoring database from backup'"
  },
  "dependencies": {
    "docker-compose": "^0.24.2",
    "kubernetes": "^0.14.0"
  },
  "devDependencies": {
    "@types/node": "^20.5.0",
    "jest": "^29.6.2",
    "typescript": "^5.1.6"
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=8.0.0"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/tiation/RiggerConnect-RiggerJobs-Workspace-PB.git",
    "directory": "Infrastructure"
  },
  "keywords": [
    "infrastructure",
    "devops",
    "deployment",
    "kubernetes",
    "docker",
    "monitoring"
  ],
  "author": "RiggerConnect Team",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/tiation/RiggerConnect-RiggerJobs-Workspace-PB/issues"
  },
  "homepage": "https://github.com/tiation/RiggerConnect-RiggerJobs-Workspace-PB#readme"
}
